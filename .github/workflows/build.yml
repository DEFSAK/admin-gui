name: Build Windows

on:
  push:
    branches:
      - '*'           # Runs on all branch pushes
  pull_request:       # Runs on all pull requests to any branch

jobs:
  build-win:
    runs-on: windows-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Get version from package.json
      - name: Get version from package.json
        id: get_version
        run: |
          $version = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
          echo "version=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'  # Adjust this to the required Node.js version
          cache: 'npm'z

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run the build command
      - name: Build for Windows
        run: npm run build:win
        
      - name: Get env
        run: |
          ls env:

      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          release_name: Release v${{ env.version }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      # Upload the .exe as a release asset
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/admin-goowee-finale-${{ env.version }}-setup.exe
          asset_name: admin-goowee-finale-${{ env.version }}-setup.exe
          asset_content_type: application/octet-stream

      # Optionally, upload the entire output directory as an artifact
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "build-windows-output"
          path: dist/admin-goowee-finale-${{ env.version }}-setup.exe
          retention-days: 7
